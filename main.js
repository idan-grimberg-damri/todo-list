(()=>{"use strict";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{CompareByDate:()=>i,CompareByPriority:()=>s});const o=new class{#topicMap;constructor(){this.#topicMap=new Map}publish(t,e){this.#topicMap.has(t)?this.#topicMap.get(t).forEach((t=>{t(e)})):this.addTopic(t)}subscribe(t,e){this.#topicMap.has(t)||this.addTopic(t),this.#topicMap.get(t).push(e)}unsubscribe(t,e){let o=this.#topicMap.get(t)?.filter((t=>t!==e));o&&this.#topicMap.set(t,o)}addTopic(t){this.#topicMap.has(t)||this.#topicMap.set(t,[])}};class r{#name;constructor(t){this.#name=t}compare(t,e){throw new Error("Abstract Method")}get name(){return this.#name}set name(t){this.#name=t}}class i extends r{constructor(){super("Date")}compare(t,e){return t.dueDate instanceof Date?e.dueDate instanceof Date?t.dueDate-e.dueDate:-1:1}}class s extends r{#compareByDate;constructor(){super("Priority"),this.#compareByDate=new i}compare(t,e){return t.priority===e.priority?this.#compareByDate.compare(t,e):e-t}}class n{#today;static get noDateValue(){return"No date"}constructor(){this.#today=new Date,this.#today.setHours(0,0,0,0)}isTodayDate(t){if(!(t instanceof Date))throw new Error("Argument must be an instance of Date");return this.#today.getTime()===t.getTime()}getTodayDate(){return this.#today}getFutureDate(t){return new Date(this.#today.getFullYear()+t.years,this.#today.getMonth()+t.months,this.#today.getDate()+t.days,0,0,0,0)}toDateString(t){return t instanceof Date?t.toLocaleDateString():n.noDateValue}equals(t,e){return t.getTime()===e.getTime()}toInputDateFormat(t){if(t instanceof Date){let e=[1+t.getMonth()+"",t.getDate()+""];return e.forEach(((t,e,o)=>{o[e].length<2&&(o[e]="0"+t)})),[t.getFullYear(),...e].join("-")}return t}getProperTodoDate(t){return t instanceof Date||(t=new Date(t),!isNaN(t.getTime()))?isNaN(t.getTime())||Math.trunc(t.getFullYear()/1e3)!==Math.trunc(this.#today.getFullYear()/1e3)||t<this.#today?n.noDateValue:t:n.noDateValue}resetHours(t){return t instanceof Date&&t.setHours(0,0,0,0),t}}const d=new n;class c{#id;#title;#description;#dueDate;#priority;#isChecked;#containingProject;static#priorities={Low:1,Medium:2,High:3};static#defaultPriority="Low";static#runNum=0;static#fetchUniqueId(){return c.#runNum++}constructor(t,e,o=c.#defaultPriority,r){this.#id=c.#fetchUniqueId(),this.#title=t,this.#description=e,this.#dueDate=d.getProperTodoDate(r),this.#priority=o,this.#isChecked=!1}assign(t){return t&&(this.#id=t.id,this.#title=t.title,this.#description=t.description,this.#dueDate=d.getProperTodoDate(t.dueDate),this.#priority=t.priority,this.#isChecked=t.isChecked),this}toJSON(){return{id:this.#id,title:this.#title,description:this.#description,dueDate:this.#dueDate,priority:this.#priority,isChecked:this.#isChecked}}get title(){return this.#title}set title(t){this.#title=t}get description(){return this.#description}set description(t){this.#description=t}get dueDate(){return this.#dueDate}set dueDate(t){if(!t instanceof Date||"No Date"!==t)throw new Error("dueDate must be a Date object or equals to the string 'No Date'.");t.setHours(0,0,0,0),this.#dueDate=t}get priority(){return this.#priority}set priority(t){t in Object.keys(c.#priorities)&&(this.#priority=t)}get isChecked(){return this.#isChecked}set isChecked(t){this.#isChecked=t}get containingProject(){return this.#containingProject}set containingProject(t){this.#containingProject=t}get id(){return this.#id}static get priorities(){return this.#priorities}valueOf(){return c.#priorities[this.#priority]}toString(){return this.#priority}toDateString(){return this.#dueDate instanceof Date?this.#dueDate.toLocaleDateString():this.#dueDate}static get defaultPriority(){return c.#defaultPriority}}class a{#name;#todos;#compareBehavior;constructor(t){this.#name=t,this.#todos=[],this.#compareBehavior=new s}assign(t){return t&&(this.#name=t.name,t.todos.forEach((t=>{this.#todos.push((new c).assign(t))})),this.#compareBehavior=new e[`CompareBy${t.compareBehavior}`]),this}toJSON(){return{name:this.#name,todos:this.#todos,compareBehavior:this.#compareBehavior.name}}add(t){let e=this.#searchTodoPosition(t);return this.#todos.splice(e,0,t),t.containingProject||(t.containingProject=this),e}remove(t){let e=this.#getIndexOfTodo(t);if(e>-1)return{todo:this.#todos.splice(e,1)[0],position:e}}sort(t){{let o=`CompareBy${t}`;if(e[o])return this.#compareBehavior=new e[o],this.#todos.sort(this.#compareBehavior.compare.bind(this.#compareBehavior)),!0}}getTodoById(t){return this.#todos.find((e=>e.id==t))}#getIndexOfTodo(t){let e=this.#todos.findIndex((e=>e.id==t));if(e>-1)return e}toString(){return this.#name}get name(){return this.#name}set name(t){this.#name=t}get todos(){return this.#todos}printTodosByDate(){let t="";for(let e of this.#todos)t+=", "+e.toDateString();return t}#searchTodoPosition(t){let e,o,r=0,i=0,s=this.#todos.length-1;for(;r<=s;)if(e=Math.trunc((r+s)/2),o=this.#compareBehavior.compare(t,this.#todos[e]),o>0)i=r=e+1;else{if(!(o<0)){i=e;break}i=s=e-1}return i===s?i+1:i}getCompareBehaviorName(){return this.#compareBehavior.name}}const h={projectAdded:"PROJECT ADDED",projectRemoved:"PROJECT REMOVED",projectSorted:"PROJECT SORTED",projectNameChanged:"PROJECT NAME CHANGED",todoAdded:"TODO ADDED",todoRemoved:"TODO REMOVED",todoUpdated:"TODO UPDATED",todoChecked:"TODO CHECKED",checkedTodosRemoved:"CHECKED TODOS REMOVED",currentProjectChanged:"CURRENT PROJECT CHANGED",todoMoved:"TODO MOVED"};class l extends class{subscribe(t,e){throw new Error("Abstract method")}unsubscribe(t,e){throw new Error("Abstract method")}}{#todoModel;#todoController;#projects;#constantProjects;#currentProject;#customProjects;#addProjectBtn;#addTodoListItem;#editTodoForm;#editTodoFormContainer;#priorityList;#projectContent;#projectContentHeader;#hiddenTodo;#projectSelectionMenu;#todos;constructor(t,e){super(),this.#todoController=t,this.#todoModel=e}createView(){this.#projects=document.querySelector(".nav-projects"),this.#constantProjects=document.querySelector(".constant-projects"),this.#customProjects=document.querySelector(".custom-projects"),this.#addProjectBtn=document.querySelector(".add-project-btn"),this.#projectContent=document.querySelector(".project-content"),this.#todos=document.querySelector(".todos"),this.#editTodoForm=this.#todos.querySelector(".edit-todo-form"),this.#addTodoListItem=this.#todos.querySelector(".add-todo-list-item"),this.#editTodoFormContainer=this.#todos.querySelector(".edit-todo-list-item"),this.#priorityList=document.querySelector(".edit-todo-priorities-list"),this.#projectSelectionMenu=document.querySelector(".select-projects"),this.#projectContentHeader=document.querySelector(".project-content-header"),this.#currentProject=this.#constantProjects.firstElementChild.nextElementSibling,this.#currentProject.classList.add("current-project"),this.#toggleAddTodoDisplay(this.#todoModel.isCurrentProjectSpecial()),this.#projectContent.querySelector("h3").textContent=this.#todoModel.currentProject.name,this.#populateTodos(this.#todoModel.currentProject.todos),this.#editTodoForm.querySelector(".edit-todo-area").onclick=t=>{t.preventDefault(),t.stopPropagation()},this.#projectSelectionMenu.add(this.#createOption("Inbox")),this.#setSortSelection(),this.#addListeners()}populateProjects(t){t.forEach((t=>{this.#customProjects.append(this.#createProjectListItem(t))}))}onProjectSorted(t){this.#setSortSelection(t.sortName),this.#clearCurrentProjectTodos(),this.#populateTodos(t.todos)}onProjectRemoved(t){this.#customProjects.children[t.position].remove(),this.#removeProjectOption(t.projectName)}onTodoRemoved(t){this.#todos.children[t].remove()}#toggleAddTodoDisplay(t){this.#addTodoListItem.style.display=t?"none":"block"}onTodoAdded(t){t.todo instanceof c&&(t.isAddedToAnotherProject||this.#todos.children[t.position].before(this.#createTodoListItem(t.todo)))}#createTodoListItem(t){let e=this.#createTodoStructure();return this.#injectTodoDetails(e,t),e}#injectTodoDetails(t,e){t.dataset.id=e.id,t.querySelector(".todo-list-item-title").textContent=e.title,t.querySelector(".todo-list-item-date").textContent=d.toDateString(e.dueDate),t.querySelector(".todo-list-item-priority").classList.add(this.#getPriorityClass(e.priority))}#getPriorityClass(t){switch(t){case"High":return"priority-high";case"Medium":return"priority-medium";case"Low":return"priority-low"}}#createTodoStructure(){return this.#todos.querySelector("template").content.cloneNode(!0).children[0]}onTodosClick(t){if(!this.#isEditTodoFormDisplayed())if("I"===t.target.tagName)this.#todoController.removeTodo(t.target.closest("li").dataset.id);else{let e=this.#getContainingListItem(t.target);e&&(e.classList.contains("add-todo-list-item")?this.#addTodo():this.#onTodoClick(e,t))}t.preventDefault(),t.stopPropagation()}#onTodoClick(t,e){this.#projectSelectionMenu.style.visibility="",e.target.closest("select")?this.#showMoveTodoOptions(t):this.#updateTodo(t)}#showMoveTodoOptions(t){}#updateTodo(t){let e=this.#todoController.getTodoProperties(t.dataset.id);e&&(this.#populateEditTodoForm(e),this.#editTodoForm.elements.submit.onclick=function(e){let o=this.#editTodoForm.elements.title.value?.trim();if(o){let e=new c(o,this.#editTodoForm.elements.description.value,this.#priorityList.dataset.priority,d.resetHours(this.#editTodoForm.elements.date.valueAsDate));this.#todoController.updateTodo(t.dataset.id,e)}this.#hideEditTodoForm(),e.preventDefault(),e.stopPropagation()}.bind(this),this.#editTodoForm.elements.cancel.onclick=function(e){this.#addTodoListItem.before(this.#editTodoFormContainer),this.#hideEditTodoForm(),t.style.display="",e.stopPropagation()}.bind(this),t.after(this.#editTodoFormContainer),t.style.display="none",this.#hiddenTodo=t,this.#showEditTodoForm())}#populateEditTodoForm(t){this.#editTodoForm.elements.title.value=t.title,this.#editTodoForm.elements.description.value=t.description,this.#editTodoForm.elements.date.value=d.toInputDateFormat(t.date);for(let e of this.#priorityList.children)e.dataset.priority===t.priority&&(e.classList.add("chosen"),this.#priorityList.dataset.priority=t.priority)}#createTodoProperties(){let t=this.#editTodoForm.elements.title.value?.trim();if(t)return{title:t,description:this.#editTodoForm.elements.description.value,priority:this.#priorityList.dataset.priority,date:d.resetHours(this.#editTodoForm.elements.date.valueAsDate)}}#addTodo(){this.#editTodoForm.elements.submit.onclick=function(t){let e=this.#createTodoProperties();e&&this.#todoController.addTodo(e),this.#hideEditTodoForm(),t.preventDefault(),t.stopPropagation()}.bind(this),this.#editTodoForm.elements.cancel.onclick=function(t){this.#hideEditTodoForm(),t.stopPropagation()}.bind(this),this.#showEditTodoForm(),this.#projectSelectionMenu.style.visibility="hidden"}#isEditTodoFormDisplayed(){return"none"!=this.#editTodoFormContainer.style.display}onPriorityClick(){let t=this.#priorityList,e=Array.from(t.children);t.onclick=function(o){let r=o.target.closest("li");if(!r||r.classList.contains("chosen"))return;let i=e.indexOf(r);r.classList.add("chosen"),e[(i+1)%3].classList.remove("chosen"),e[(i+2)%3].classList.remove("chosen"),t.dataset.priority=r.dataset.priority}}#clearCurrentProjectTodos(){let t=this.#todos.querySelector("template");for(;t.previousElementSibling;)t.previousElementSibling.remove()}#populateTodos(t){for(let e=t.length-1;e>=0;e--)this.#todos.prepend(this.#createTodoListItem(t[e]))}#handleProjectSelectionMenu(t,e){this.#todoModel.isSpecialProject(t)||this.#projectSelectionMenu.add(this.#createOption(t)),this.#todoModel.isSpecialProject(e)||this.#removeProjectOption(e)}#removeProjectOption(t){let e;for(let o of this.#projectSelectionMenu.options)if(o.value===t){e=o;break}e&&e.remove()}#getProjectByName(t){let e=this.#projects.querySelectorAll("li");for(let o of e)if(o.firstElementChild.textContent===t)return o}onCurrentProjectChanged(t){t instanceof a&&(this.#handleProjectSelectionMenu(document.querySelector("li.current-project > span").textContent,t.name),this.#currentProject.classList.remove("current-project"),this.#currentProject=this.#getProjectByName(t.name),this.#clearCurrentProjectTodos(),this.#currentProject.classList.add("current-project"),this.#projectContent.querySelector("h3").textContent=t.name,this.#toggleAddTodoDisplay(this.#todoModel.isCurrentProjectSpecial()),this.#populateTodos(this.#todoModel.currentProject.todos),this.#setSortSelection())}#setSortSelection(t=this.#todoModel.getCurrentProjectSortName()){let e=this.#projectContentHeader.querySelector(".sort-project-menu").options;for(let o of e)o.value===t&&(o.selected=!0)}onClickChangeCurrentProject(t){let e=this.#getContainingListItem(t.target);e&&this.#currentProject!==e&&this.#todoController.changeCurrentProject(e.querySelector("span").textContent)}#getContainingListItem(t){return t.closest("li")}#addListeners(){document.addEventListener("click",this.onDocumentClick.bind(this)),this.#addProjectBtn.addEventListener("click",this.onClickAddProject.bind(this)),this.#projects.addEventListener("click",this.onClickChangeCurrentProject.bind(this)),this.#todos.addEventListener("click",this.onTodosClick.bind(this)),this.#priorityList.addEventListener("click",this.onPriorityClick()),this.#projectSelectionMenu.addEventListener("change",this.onChangeProjectSelection.bind(this)),this.#customProjects.addEventListener("click",this.onCustomProjectsClick.bind(this)),this.#projectContentHeader.addEventListener("change",this.onProjectContentHeaderChange.bind(this))}onProjectContentHeaderChange(t){let e=t.target.closest("select");e&&e.classList.contains("sort-project-menu")&&this.#todoController.sortProject(t.target.value)}onCustomProjectsClick(t){let e=t.target.closest(".project-settings");if(e){let o=t.target.closest("li"),r=t.target.closest("span");e.contains(r)&&(r.classList.contains("edit-project-name")?(this.#editProjectName(o),t.stopPropagation()):this.#removeProject(o))}}onProjectNameChanged(t){let e=this.#customProjects.querySelectorAll("li");for(let o of e)o.firstElementChild.textContent===t.projectName&&(o.firstElementChild.textContent=t.updatedProjectName,o===this.#currentProject&&(this.#projectContent.querySelector("h3").textContent=t.updatedProjectName))}#editProjectName(t){let e=document.querySelector(".one-input-project-form"),o=this.#attachFormContainer(e,"","form-container"),r=this.#createModalCover();e.firstElementChild.textContent="Edit project name",e.onsubmit=function(i){let s=e.elements.text.value;s&&this.#todoController.changeProjectName(t.firstElementChild.textContent,s),this.#hideModalForm(r,e,o),i.preventDefault(),i.stopPropagation()}.bind(this),e.cancel.onclick=function(t){this.#hideModalForm(r,e,o),t.preventDefault(),t.stopPropagation()}.bind(this),this.#showModalForm(r,e)}#removeProject(t){let e=t.firstElementChild.textContent;window.confirm(`Are you sure you want to remove project "${e}"?`)&&this.#todoController.removeProject(e)}onChangeProjectSelection(t){this.#hiddenTodo&&(this.#projectSelectionMenu.form.elements.submit.onclick=this.#projectSelectionMenu.form.elements.cancel.onclick=null,this.#todoController.moveTodoToProject(this.#hiddenTodo.dataset.id,t.target.value))}onTodoMoved(){this.#hiddenTodo.style.display="",this.#hiddenTodo=null,this.#hideEditTodoForm()}onDocumentClick(t){t.target.closest(".nav-projects")&&(this.#hideEditTodoForm(),this.#hiddenTodo&&(this.#hiddenTodo.style.display="",this.#hiddenTodo=null),this.#addTodoListItem.previousElementSibling!==this.#editTodoFormContainer&&this.#addTodoListItem.before(this.#editTodoFormContainer))}#showEditTodoForm(){this.#editTodoFormContainer.style.display="block",this.#addTodoListItem.style.display="none",this.#projectContentHeader.querySelector(".sort-project-menu").disabled=!0}#hideEditTodoForm(){this.#editTodoFormContainer.style.display="none",this.#editTodoForm.reset(),this.#priorityList.dataset.priority=this.#todoModel.getDefaultPriority();for(let t of this.#editTodoForm.querySelector(".edit-todo-priorities-list").children)t.classList.remove("chosen");this.#todoModel.isCurrentProjectSpecial()||(this.#addTodoListItem.style.display="block"),this.#projectContentHeader.querySelector(".sort-project-menu").disabled=!1}#displayTodo(t){t.style.display=""}#createOption(t){let e=document.createElement("option");return e.value=e.text=t,e}onProjectAdded(t){t instanceof a&&this.#customProjects.append(this.#createProjectListItem(t.name))}#createProjectListItem(t){let e=document.createElement("li"),o=document.createElement("span");o.append(t),e.append(o);let r=document.querySelector("#project-settings-template").content.cloneNode(!0).children[0];r.style.display="none",e.addEventListener("mouseover",(()=>{r.style.display="block"})),e.addEventListener("mouseleave",(()=>{r.style.display="none"})),e.append(r),e.classList.add("project-list-item");let i=this.#createOption(t);return this.#projectSelectionMenu.add(i),e}onTodoUpdated(t){console.log(t)}onTodoChecked(t){console.log(t)}onCheckedTodosRemoved(t){console.log(t)}onClickAddProject(){let t=document.querySelector(".one-input-project-form"),e=this.#attachFormContainer(t,"","form-container"),o=this.#createModalCover();t.firstElementChild.textContent="Add new project",t.onsubmit=function(r){let i=t.elements.text.value;i&&this.#todoController.addProject(i),this.#hideModalForm(o,t,e),r.preventDefault(),r.stopPropagation()}.bind(this),t.cancel.onclick=function(r){this.#hideModalForm(o,t,e),r.preventDefault(),r.stopPropagation()}.bind(this),this.#showModalForm(o,t)}#attachFormContainer(t,e,o){let r=document.createElement("div");return r.classList.add(o),t.before(r),r.innerHTML=`<span>${e}</span>`,r.append(t),r}#createModalCover(){let t=document.createElement("div");return t.classList.add("modal-cover"),t}#hideModalForm(t,e,o){o.replaceWith(e),e.style.display="none",t.remove(),document.body.overflowY=""}#showModalForm(t,e){this.#handleFocusTrap(t,e),document.body.append(t),document.body.style.overflowY="hidden",e.style.display="block",e.elements.text.value="",e.elements.text.focus()}#handleFocusTrap(t,e){let o=e.elements[0],r=e.elements[e.elements.length-1];r.onkeydown=function(t){if("Tab"==t.key&&!t.shiftKey)return o.focus(),!1},o.onkeydown=function(t){if("Tab"==t.key&&t.shiftKey)return r.focus(),!1},t.onclick=function(){o.focus()}}subscribeAll(){for(let t in h){let e=`on${t.charAt(0).toUpperCase()}${t.substring(1)}`;this.subscribe(h[t],this[e].bind(this))}}subscribe(t,e){o.subscribe(t,e)}unsubscribe(t,e){o.unsubscribe(t,e)}clickCheckTodo(t){this.#todoController.checkTodo(t)}clickSortProject(t){this.#todoController.sortProject(t)}clickMoveTodoToProject(t,e){this.#todoController.moveTodoToProject(t,e)}clickRemoveCheckedTodos(){this.#todoController.removeCheckedTodos()}}class u{static setModelState(t){localStorage.setItem("model",JSON.stringify(t))}static getModelState(){return JSON.parse(localStorage.getItem("model"))}}class p extends class{#from;#to;constructor(t,e){this.#validateRange(t,e),this.#from=t,this.#to=e}includes(t){return this.#from<=t&&t<=this.#to}toString(){return`(${this.#from},...,${this.#to})`}get from(){return this.#from}set from(t){this.#validateRange(t,this.#to),this.#from=t}get to(){return this.#to}set to(t){this.#validateRange(this.#from,t),this.#to=t}#validateRange(t,e){if(t>e)throw new Error(`The start of the range can't be greater then the end: from=${t}, to=${e}`)}}{constructor(t,e){super(t,e),this.#validateRange(t,e)}includes(t){if(!(t instanceof Date))throw new Error("Argument must be an instance of Date");return super.includes(t)}#validateRange(t,e){if(!(t instanceof Date&&e instanceof Date))throw new Error("The date range sides must be an instance of Date")}toString(){return`DateRange: ${super.toString()}`}}class m extends a{#dateRange;constructor(t,e,o){super(t),this.#dateRange=new p(e,o)}fillTodos(t){for(let e of t)for(let t of e.todos)this.#dateRange.includes(t.dueDate)&&this.add(t)}get dateRange(){return this.#dateRange}}class j extends m{constructor(){let t=d.getTodayDate();super("Today",t,t)}}class P extends m{constructor(){super("Next 7 days",d.getFutureDate({years:0,months:0,days:1}),d.getFutureDate({years:0,months:0,days:8}))}}class g extends class extends class{publish(t,e){throw new Error("Abstract method")}}{init(){throw new Error("Abstract method")}addProject(t){throw new Error("Abstract method")}removeProject(t){throw new Error("Abstract method")}sortProject(t){throw new Error("Abstract method")}addTodo(t,e){throw new Error("Abstract method")}removeTodo(t){throw new Error("Abstract method")}updateTodo(t,e){throw new Error("Abstract method")}checkTodo(t){throw new Error("Abstract method")}}{#projects;#currentProject;static#specialProjects={inbox:0,today:1,nextSevenDays:2};constructor(){super(),this.#projects=[],this.#defineProjectsProperties(),this.#currentProject=this.#projects[g.#specialProjects.today]}init(){}assign(t){if(t){let e=g.getSpecialProjectsLength();t.projects.forEach((t=>{this.#projects[e++]=(new a).assign(t)}))}return this}toJSON(){return{projects:this.#projects.slice(g.getSpecialProjectsLength()),currentProject:this.#projects[g.#specialProjects.today]}}addProject(t){if(this.getProjectByName(t))this.publish(h.projectAdded,{errorMessage:`A project with the name ${t} is already exists`});else{let e=new a(t);this.#projects.push(e),this.publish(h.projectAdded,e)}}removeProject(t){let e=g.#specialProjects.nextSevenDays+1;for(;e<this.#projects.length&&this.#projects[e].name!==t;)e++;if(e<this.#projects.length){let[o]=this.#projects.splice(e,1);o===this.#currentProject&&this.changeCurrentProject("Today"),this.publish(h.projectRemoved,{position:e-g.getSpecialProjectsLength(),projectName:t})}}sortProject(t){this.#currentProject.sort(t)&&this.publish(h.projectSorted,{sortName:t,todos:this.#currentProject.todos})}addTodo(t,e=this.#currentProject){let o=e.add(t),r=this.updateSpecialProjects("add",t.dueDate,t);e===this.#currentProject||r===this.#currentProject?this.publish(h.todoAdded,{todo:t,position:o}):this.publish(h.todoAdded,{todo:t,position:o,isAddedToAnotherProject:!0})}removeTodo(t){let e=this.#currentProject.remove(t);if(e)return this.isCurrentProjectSpecial()?e.todo.containingProject.remove(t):this.updateSpecialProjects("remove",e.todo.dueDate,t),this.publish(h.todoRemoved,e.position),e.todo}checkTodo(t){let e=this.#currentProject.getTodoById(t);e&&(e.isChecked=!e.isChecked,this.publish(h.todoChecked,{todo:e}))}updateTodo(t,e){let o=this.removeTodo(t);this.isCurrentProjectSpecial()?this.addTodo(e,o.containingProject):this.addTodo(e)}moveTodoToProject(t,e){let r=this.getProjectByName(e);if(r){let e=this.removeTodo(t);e&&this.addTodo(e,r)}o.publish(h.todoMoved)}changeCurrentProject(t){let e=this.getProjectByName(t);e&&(this.#currentProject=e,this.publish(h.currentProjectChanged,this.#currentProject))}isCurrentProjectSpecial(){return this.#currentProject===this.#projects[g.#specialProjects.today]||this.#currentProject===this.#projects[g.#specialProjects.nextSevenDays]}get currentProject(){return this.#currentProject}set currentProject(t){let e=this.getProjectByName(t);e&&(this.#currentProject=e,this.publish(h.currentProjectChanged,{currentProject:this.#currentProject}))}get projects(){return this.#projects}getCheckedTodos(){return this.#currentProject.todos.filter((t=>t.isChecked))}publish(t,e){o.publish(t,e)}getProjectByName(t){return this.#projects.filter((e=>e.name===t))[0]}#defineProjectsProperties(){Object.defineProperties(this.#projects,{0:{value:new a("Inbox"),writable:!0,configurable:!1,enumerable:!0},1:{value:new j,writable:!0,configurable:!1,enumerable:!0},2:{value:new P,writable:!0,configurable:!1,enumerable:!0}})}updateSpecialProjects(t,e,o){if(e instanceof Date){if(this.#projects[g.#specialProjects.today].dateRange.includes(e))return this.#projects[g.#specialProjects.today][t](o),this.#projects[g.#specialProjects.today];if(this.#projects[g.#specialProjects.nextSevenDays].dateRange.includes(e))return this.#projects[g.#specialProjects.nextSevenDays][t](o),this.#projects[g.#specialProjects.nextSevenDays]}}getDefaultPriority(){return c.defaultPriority}getTodoById(t){return this.#currentProject.getTodoById(t)}isSpecialProject(t){return t===this.#projects[g.#specialProjects.today].name||t===this.#projects[g.#specialProjects.nextSevenDays].name}changeProjectName(t,e){this.getProjectByName(e)||(this.getProjectByName(t).name=e,o.publish(h.projectNameChanged,{projectName:t,updatedProjectName:e}))}getCurrentProjectSortName(){return this.#currentProject.getCompareBehaviorName()}static getSpecialProjectsLength(){return Object.keys(g.#specialProjects).length}}new class extends class{init(){throw new Error("Abstract method")}addProject(t){throw new Error("Abstract method")}removeProject(t){throw new Error("Abstract method")}sortProject(t){throw new Error("Abstract method")}addTodo(t){throw new Error("Abstract method")}updateTodo(t,e){throw new Error("Abstract method")}removeTodo(t){throw new Error("Abstract method")}checkTodo(t){throw new Error("Abstract method")}removeCheckedTodos(){throw new Error("Abstract method")}}{#todoView;#todoModel;constructor(t){super(),this.#todoModel=t.assign(u.getModelState()),this.#handleStorageSpecialProjects(),this.#todoView=new l(this,t),this.#todoView.subscribeAll(),this.#todoView.createView(),this.#todoView.populateProjects(this.#getProjectsNames())}#handleStorageSpecialProjects(){for(let t of this.#todoModel.projects)for(let e of t.todos)this.#todoModel.updateSpecialProjects("add",e.dueDate,e)}addProject(t){this.#todoModel.addProject(t),u.setModelState(this.#todoModel)}removeProject(t){this.#todoModel.removeProject(t),u.setModelState(this.#todoModel)}sortProject(t){this.#todoModel.sortProject(t),u.setModelState(this.#todoModel)}addTodo(t){this.#todoModel.addTodo(new c(t.title,t.description,t.priority,t.date)),u.setModelState(this.#todoModel)}removeTodo(t){this.#todoModel.removeTodo(t),u.setModelState(this.#todoModel)}checkTodo(t){this.#todoModel.checkTodo(t),u.setModelState(this.#todoModel)}updateTodo(t,e){this.#todoModel.updateTodo(t,e),u.setModelState(this.#todoModel)}removeCheckedTodos(){this.#todoModel.getCheckedTodos().forEach((t=>this.#todoModel.removeTodo(t.id))),u.setModelState(this.#todoModel)}changeCurrentProject(t){this.#todoModel.changeCurrentProject(t),u.setModelState(this.#todoModel)}moveTodoToProject(t,e){this.#todoModel.moveTodoToProject(t,e),u.setModelState(this.#todoModel)}getTodoProperties(t){let e=this.#todoModel.getTodoById(t);if(e)return{title:e.title,description:e.description,date:e.dueDate,priority:e.priority}}changeProjectName(t,e){this.#todoModel.changeProjectName(t,e),u.setModelState(this.#todoModel)}#getProjectsNames(){return this.#todoModel.projects.map((t=>t.name)).slice(g.getSpecialProjectsLength())}}(new g)})();